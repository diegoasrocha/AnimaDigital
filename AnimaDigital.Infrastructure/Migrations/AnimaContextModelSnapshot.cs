// <auto-generated />
using AnimaDigital.Infrastructure.DBConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimaDigital.Infrastructure.Migrations
{
    [DbContext(typeof(AnimaContext))]
    partial class AnimaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimaDigital.Domain.Models.Aluno", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11);

                    b.Property<int>("Ra");

                    b.HasKey("Cpf", "Ra");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.AlunoGrade", b =>
                {
                    b.Property<string>("Cpf");

                    b.Property<int>("Ra");

                    b.Property<int>("CodGrade");

                    b.HasKey("Cpf", "Ra", "CodGrade");

                    b.HasAlternateKey("CodGrade", "Cpf", "Ra");

                    b.ToTable("AlunoGrade");
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Grade", b =>
                {
                    b.Property<int>("CodGrade");

                    b.Property<int>("CodFuncionario");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Disciplina")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Turma")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("CodGrade");

                    b.HasIndex("Cpf", "CodFuncionario");

                    b.ToTable("Grade");
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Professor", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11);

                    b.Property<int>("CodFuncionario");

                    b.HasKey("Cpf", "CodFuncionario");

                    b.HasAlternateKey("CodFuncionario", "Cpf");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Usuario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Cpf");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Aluno", b =>
                {
                    b.HasOne("AnimaDigital.Domain.Models.Usuario", "Usuario")
                        .WithOne("Aluno")
                        .HasForeignKey("AnimaDigital.Domain.Models.Aluno", "Cpf")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.AlunoGrade", b =>
                {
                    b.HasOne("AnimaDigital.Domain.Models.Grade", "Grade")
                        .WithMany("GradeAlunos")
                        .HasForeignKey("CodGrade")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AnimaDigital.Domain.Models.Aluno", "Aluno")
                        .WithMany("AlunoGrades")
                        .HasForeignKey("Cpf", "Ra")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Grade", b =>
                {
                    b.HasOne("AnimaDigital.Domain.Models.Professor", "Professor")
                        .WithMany("Grades")
                        .HasForeignKey("Cpf", "CodFuncionario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AnimaDigital.Domain.Models.Professor", b =>
                {
                    b.HasOne("AnimaDigital.Domain.Models.Usuario", "Usuario")
                        .WithOne("Professor")
                        .HasForeignKey("AnimaDigital.Domain.Models.Professor", "Cpf")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
